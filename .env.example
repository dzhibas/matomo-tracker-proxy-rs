# matomo proxy url
MATOMO_URL=
# token generated in matomo
MATOMO_AUTH_TOKEN=token
# timeout to matomo in sec
MATOMO_TIMEOUT=5

# process url which is called if redis queue enabled once CACHE_MAX_ENTRIES is reached in queue
MATOMO_PROCESS_URL=

# instead of synchronously proxying directly to matomo, drop prepared entry into queue
# entries is prepared for QueuedTracking to understand and ingest/process
# possible values: true, false
USE_REDIS_QUEUE=false

# redis settings
REDIS_HOST=
REDIS_AUTH=
REDIS_PORT=6379
REDIS_QUEUE_NAME=trackingQueueV1

# amount of queues which is setup on matomo side. this proxy will divide in same amount of buckets
REDIS_WORKER_AMOUNT=

# once this amount of entries reached in any of the queue, matomo process API will be called in cron
CACHE_MAX_ENTRIES=

# if you redis setup is with high availability sentinels this allows to get master from sentinel
USE_REDIS_SENTINEL=false

# sentinel settings
REDIS_SENTINEL_HOSTS=
REDIS_SENTINEL_AUTH=
REDIS_SENTINEL_MASTER=
REDIS_SENTINEL_PORT=